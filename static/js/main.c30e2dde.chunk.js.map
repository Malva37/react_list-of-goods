{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","sortAlph","setState","ALPHABET","sortLength","LENGTH","sortNone","NONE","reverse","this","visibleGoods","goods","console","log","getReorderedGoods","sort","f1","f2","localeCompare","length","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,GAHd,EAMEC,SAAW,WACT,EAAKC,SAAS,CAAEF,SAAUL,EAASQ,YAPvC,EAUEC,WAAa,WACX,EAAKF,SAAS,CAAEF,SAAUL,EAASU,UAXvC,EAcEC,SAAW,WACT,EAAKJ,SAAS,CAAEF,SAAUL,EAASY,KAAMR,YAAY,KAfzD,EAkBES,QAAU,WACR,EAAKN,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA7CH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOC,GAMzB,OAFAC,QAAQC,IAAIb,EAAUD,GAEfW,EAkCgBI,CACnBlB,EACA,CAAEI,WAAUD,eAmBd,OAhBAW,EAAaK,MAAK,SAACC,EAAIC,GACrB,OAAQjB,GACN,KAAKL,EAASQ,SACZ,OAAOa,EAAGE,cAAcD,GAC1B,KAAKtB,EAASU,OACZ,OAAOW,EAAGG,OAASF,EAAGE,OACxB,KAAKxB,EAASY,KACd,QACE,OAAO,MAITR,GACFW,EAAaF,UAIb,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaL,EAASQ,WAEtCoB,QAASd,KAAKR,SANhB,iCAWA,wBACEoB,KAAK,SACLE,QAASd,KAAKL,WACdgB,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaL,EAASU,SALxC,4BAWA,wBACEgB,KAAK,SACLE,QAASd,KAAKD,QACdY,UAAWE,IACT,oBACA,CAAE,YAAavB,IALnB,sBAWGC,IAAaL,EAASY,MAAQR,IAC7B,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKH,SAHhB,sBAWN,6BACGI,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,eAnGnB,GAAyBC,IAAMC,WC9C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c30e2dde.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortAlph = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortNone = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    visibleGoods.sort((f1, f2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return f1.localeCompare(f2);\n        case SortType.LENGTH:\n          return f1.length - f2.length;\n        case SortType.NONE:\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlph}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortLength}\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n          {\n            (sortType !== SortType.NONE || isReversed) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.sortNone}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}